{"version":3,"sources":["components/Header/index.js","utility/constants.js","core-components/Checkbox/index.js","components/Filters/sub-components/FilterCategory.js","core-components/Button/index.js","config/context.js","config/store.js","config/helpers.js","components/Filters/index.js","components/Sidebar/index.js","core-components/Chip/index.js","components/SelectedFilters/index.js","core-components/Select/index.js","core-components/SearchBar/index.js","components/SearchAndSort/index.js","utility/getRelativeTimestamp.js","core-components/CharacterCard/index.js","components/ResultsSection/index.js","core-components/NoResults/index.js","components/ContentSection/index.js","config/axiosInstance.js","utility/apiService.js","core-components/Spinner/index.js","components/Main/index.js","components/Footer/index.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","href","Checkbox","id","label","isChecked","onChange","undefined","_class","testId","type","checked","data-test-id","FilterCategory","options","applyFilters","map","option","key","isSelected","e","target","Button","isIcon","ariaLabel","onClick","children","aria-label","context","sortOptions","value","name","filterCategories","initialState","store","createContext","Provider","cloneData","selectedFilters","Set","StateProvider","useReducer","state","action","cloneDeep","payload","results","data","searchResults","searchTerm","filter","character","toLowerCase","includes","updatedFilterContext","forEach","category","optionType","add","delete","filterResults","updatedData","filterData","filteredData","filterObj","Map","has","get","push","optionsArray","set","optionsInMap","index","indexOf","splice","size","filData","obj","foundData","getFilteredData","sortedResults","baseData","sortParams","orderBy","sortParam","sortOrder","Error","dispatch","Filters","useContext","useState","expandOrCollapse","setExpandOrCollapse","filterCategory","Sidebar","Chip","onClose","SelectedFilters","Array","from","selFilter","Select","defaultValue","optionsData","SearchBar","inputLabel","btnLabel","handleSearch","setSearchTerm","handleSearchSubmit","trim","preventDefault","onSubmit","htmlFor","SearchAndSort","setSortParam","handleSort","getTimestamp","inputDate","currentDate","Date","createdDate","current","previous","elapsed","Math","floor","msPerMinute","msPerHour","msPerDay","timeDifference","getTime","CharacterCard","status","species","gender","origin","location","image","created","src","alt","ResultsSection","NoResults","message","ContentSection","fetchData","length","previousLabel","nextLabel","breakLabel","breakClassName","pageCount","info","pages","marginPagesDisplayed","pageRangeDisplayed","onPageChange","pageUrl","selected","containerClassName","subContainerClassName","activeClassName","instance","axios","create","baseURL","timeout","headers","CancelToken","source","isCancel","apiService","a","url","response","error","params","customHeader","requestType","resp","post","Spinner","Main","page","promise","then","details","responsePayload","useEffect","Object","keys","Footer","rel","App","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","ReactDOM","render","document","getElementById","URL","process","addEventListener","fetch","contentType","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.491c281b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { string } from \"prop-types\";\r\nimport { LBL_LOGO } from \"../../utility/constants\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header className=\"header\">\r\n      <div className=\"header__logo\">\r\n        <a className=\"header__logo-link\" href=\"/\">\r\n          {LBL_LOGO}\r\n        </a>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nHeader.propTypes = { logo: string };\r\n\r\nexport default Header;\r\n","/* Labels */\r\nexport const LBL_LOGO = \"Rickcyclopedia.\";\r\nexport const LBL_FILTERS_TITLE = \"Filters\";\r\nexport const LBL_SELECTED_FILTERS_TITLE = \"Selected filters\";\r\nexport const LBL_SEARCH = \"Search by name\";\r\nexport const LBL_SEARCH_CTA = \"Search\";\r\nexport const LBL_STATUS = \"status\";\r\nexport const LBL_SPECIES = \"species\";\r\nexport const LBL_GENDER = \"gender\";\r\nexport const LBL_ORIGIN = \"origin\";\r\nexport const LBL_LAST_LOCATION = \"last location\";\r\nexport const LBL_PREV = \"Prev\";\r\nexport const LBL_NEXT = \"Next\";\r\nexport const LBL_PAGINATION_BREAK = \"...\";\r\nexport const LBL_CREATED = \"Created\";\r\n\r\n/* URL params */\r\nexport const URL_PARAM = \"?page=\";\r\n\r\n/* Messages */\r\nexport const MSG_NO_RESULTS_FOUND = \"No results found!\";\r\n\r\n/* Actions */\r\nexport const ACT_FETCH_DATA = \"FETCH_DATA\";\r\nexport const ACT_SEARCH_CHAR = \"SEARCH_CHAR\";\r\nexport const ACT_APPLY_FILTER = \"APPLY_FILTER\";\r\nexport const ACT_SORT_DATA = \"SORT_DATA\";\r\nexport const ACT_CLEAR_DATA = \"CLEAR_DATA\";\r\n\r\n/* App */\r\nexport const APP_NAME = \"Rickcyclopedia\";\r\nexport const GIT_LINK = \"https://github.com/kaskaush\";\r\nexport const GIT_NAME = \"Kaushik Kasibhatla\";\r\n","import React from \"react\";\r\nimport { string, bool, func } from \"prop-types\";\r\n\r\nconst Checkbox = ({\r\n  id = \"\",\r\n  label = \"\",\r\n  isChecked = false,\r\n  onChange = undefined,\r\n  _class = \"\",\r\n  testId = \"\",\r\n}) => {\r\n  return (\r\n    <label className={`checkbox ${_class}`}>\r\n      {label}\r\n      <input\r\n        id={id}\r\n        type=\"checkbox\"\r\n        checked={isChecked}\r\n        onChange={onChange}\r\n        data-test-id={testId}\r\n      />\r\n      <span className=\"checkmark\"></span>\r\n    </label>\r\n  );\r\n};\r\n\r\nCheckbox.propTypes = {\r\n  id: string,\r\n  label: string,\r\n  isChecked: bool,\r\n  onChange: func || undefined,\r\n  _class: string,\r\n  testId: string,\r\n};\r\n\r\nexport default Checkbox;\r\n","import React from \"react\";\r\nimport { string, arrayOf, object, func } from \"prop-types\";\r\nimport Checkbox from \"../../../core-components/Checkbox\";\r\n\r\nconst FilterCategory = ({ type, options, applyFilters }) => {\r\n  return (\r\n    <>\r\n      <div className=\"filters__category\">\r\n        <div className=\"filters__name-section\">\r\n          <h4 className=\"filters__name\">{type}</h4>\r\n        </div>\r\n        <div className=\"filters__options\">\r\n          <ul className=\"filters__list\">\r\n            {options &&\r\n              options.map((option) => {\r\n                return (\r\n                  <li key={option.type}>\r\n                    <Checkbox\r\n                      label={option.type}\r\n                      isChecked={option.isSelected}\r\n                      onChange={(e) => {\r\n                        applyFilters(type, option.type, e.target.checked);\r\n                      }}\r\n                    />\r\n                  </li>\r\n                );\r\n              })}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nFilterCategory.propTypes = {\r\n  type: string,\r\n  options: arrayOf(object),\r\n  applyFilters: func,\r\n};\r\n\r\nexport default FilterCategory;\r\n","import React from \"react\";\r\nimport { string, bool, func, node } from \"prop-types\";\r\n\r\nconst Button = ({\r\n  id = \"\",\r\n  isIcon = false,\r\n  _class = \"\",\r\n  ariaLabel = \"\",\r\n  onClick = undefined,\r\n  testId = \"\",\r\n  children = null,\r\n  type = \"button\",\r\n}) => {\r\n  return (\r\n    <button\r\n      type={type}\r\n      id={id}\r\n      className={`btn ${isIcon ? \"btn-icon\" : \"\"} ${_class}`}\r\n      aria-label={ariaLabel}\r\n      onClick={onClick}\r\n      data-test-id={testId}\r\n    >\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  id: string,\r\n  isIcon: bool,\r\n  _class: string,\r\n  ariaLabel: string,\r\n  onClick: func || undefined,\r\n  testId: string,\r\n  children: node,\r\n  type: string,\r\n};\r\n\r\nexport default Button;\r\n","const context = {\r\n  sortOptions: [\r\n    { value: \"id\", name: \"Sort by ID\" },\r\n    { value: \"name\", name: \"Sort by Name\" },\r\n  ],\r\n  filterCategories: [\r\n    {\r\n      type: \"status\",\r\n      options: [\r\n        { type: \"Alive\", isSelected: false },\r\n        { type: \"Dead\", isSelected: false },\r\n        { type: \"unknown\", isSelected: false },\r\n      ],\r\n    },\r\n    {\r\n      type: \"species\",\r\n      options: [\r\n        { type: \"Human\", isSelected: false },\r\n        { type: \"Alien\", isSelected: false },\r\n        { type: \"Mytholog\", isSelected: false },\r\n      ],\r\n    },\r\n    {\r\n      type: \"gender\",\r\n      options: [\r\n        { type: \"Male\", isSelected: false },\r\n        { type: \"Female\", isSelected: false },\r\n      ],\r\n    },\r\n    {\r\n      type: \"origin\",\r\n      options: [\r\n        { type: \"unknown\", isSelected: false },\r\n        { type: \"Post-Apocalyptic Earth\", isSelected: false },\r\n        { type: \"Nuptia 4\", isSelected: false },\r\n      ],\r\n    },\r\n  ],\r\n};\r\n\r\nexport default context;\r\n","import React, { createContext, useReducer } from \"react\";\r\nimport context from \"./context\";\r\nimport cloneDeep from \"lodash.clonedeep\";\r\nimport { getFilteredData, getSearchData, getSortedData } from \"./helpers\";\r\n\r\nconst initialState = context;\r\nconst store = createContext(initialState);\r\nconst { Provider } = store;\r\n\r\nlet cloneData = null;\r\nlet selectedFilters = new Set();\r\n\r\nconst StateProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer((state, action) => {\r\n    switch (action.type) {\r\n      case \"FETCH_DATA\":\r\n        cloneData = cloneDeep(action.payload.results);\r\n        return { ...state, data: action.payload };\r\n\r\n      case \"SEARCH_CHAR\":\r\n        const searchResults = getSearchData(cloneData, action.payload);\r\n        return { ...state, data: { ...state.data, results: searchResults } };\r\n\r\n      case \"APPLY_FILTER\":\r\n        let updatedFilterContext = state.filterCategories;\r\n\r\n        updatedFilterContext.forEach((category) => {\r\n          if (category.type === action.payload.type) {\r\n            category.options.forEach((option) => {\r\n              if (option.type === action.payload.optionType) {\r\n                option.isSelected = action.payload.isChecked;\r\n                if (action.payload.isChecked) {\r\n                  selectedFilters.add(action.payload.optionType);\r\n                } else {\r\n                  selectedFilters.delete(option.type);\r\n                }\r\n              }\r\n            });\r\n          }\r\n        });\r\n\r\n        const filterResults = getFilteredData(\r\n          state.data.results,\r\n          cloneData,\r\n          updatedFilterContext\r\n        );\r\n\r\n        return {\r\n          ...state,\r\n          filterCategories: updatedFilterContext,\r\n          selectedFilters,\r\n          data: { ...state.data, results: filterResults },\r\n        };\r\n\r\n      case \"SORT_DATA\":\r\n        const sortedResults = getSortedData(state.data.results, action.payload);\r\n        return { ...state, data: { ...state.data, results: sortedResults } };\r\n\r\n      case \"CLEAR_DATA\":\r\n        return { ...state, data: [] };\r\n\r\n      default:\r\n        throw new Error();\r\n    }\r\n  }, initialState);\r\n\r\n  return <Provider value={{ state, dispatch }}>{children}</Provider>;\r\n};\r\n\r\nexport { store, StateProvider };\r\n","import filter from \"lodash.filter\";\r\nimport orderBy from \"lodash.orderby\";\r\n\r\nconst getSearchData = (cloneData, searchTerm) => {\r\n  let filteredData = filter(cloneData, (character) => {\r\n    return character.name.toLowerCase().includes(searchTerm.toLowerCase());\r\n  });\r\n\r\n  return filteredData;\r\n};\r\n\r\nconst getFilteredData = (updatedData, cloneData, filterData) => {\r\n  let filteredData = [];\r\n  let filterObj = new Map();\r\n\r\n  filterData.forEach((filter) => {\r\n    filter.options.forEach((option) => {\r\n      if (option.isSelected) {\r\n        if (!filterObj.has(filter.type)) {\r\n          let optionsArray = [];\r\n          optionsArray.push(option.type);\r\n          filterObj.set(filter.type, optionsArray);\r\n        } else {\r\n          filterObj.get(filter.type).push(option.type);\r\n        }\r\n      } else {\r\n        if (filterObj.has(filter.type)) {\r\n          const optionsInMap = filterObj.get(filter.type);\r\n          const index = optionsInMap && optionsInMap.indexOf(option.type);\r\n          if (index !== -1) optionsInMap.splice(index, 1);\r\n        }\r\n      }\r\n    });\r\n  });\r\n\r\n  if (filterObj.size) {\r\n    filterObj.forEach((value, key) => {\r\n      value.forEach((filData) => {\r\n        let obj = { [key]: filData };\r\n        let foundData = filter(cloneData, obj);\r\n        filteredData.push(...foundData);\r\n      });\r\n    });\r\n  }\r\n\r\n  return filteredData;\r\n};\r\n\r\nconst getSortedData = (baseData, sortParams) => {\r\n  let sortedData = orderBy(\r\n    baseData,\r\n    [sortParams.sortParam],\r\n    [sortParams.sortOrder]\r\n  );\r\n\r\n  return sortedData;\r\n};\r\n\r\nexport { getFilteredData, getSearchData, getSortedData };\r\n","import React, { useContext, useState } from \"react\";\r\nimport FilterCategory from \"./sub-components/FilterCategory\";\r\nimport Button from \"../../core-components/Button\";\r\nimport { store } from \"../../config/store\";\r\nimport { ACT_APPLY_FILTER, LBL_FILTERS_TITLE } from \"../../utility/constants\";\r\n\r\nconst Filters = () => {\r\n  const context = useContext(store);\r\n  const {\r\n    state: { filterCategories },\r\n    dispatch,\r\n  } = context;\r\n\r\n  const [expandOrCollapse, setExpandOrCollapse] = useState(false);\r\n\r\n  const applyFilters = (type, optionType, isChecked) => {\r\n    dispatch({\r\n      type: ACT_APPLY_FILTER,\r\n      payload: { type, optionType, isChecked },\r\n    });\r\n  };\r\n\r\n  const toggleFilterSection = () => {\r\n    setExpandOrCollapse(!expandOrCollapse);\r\n  };\r\n\r\n  return (\r\n    <div className=\"filters\">\r\n      <div className=\"filters__title-section\">\r\n        <h3 className=\"filters__title\">{LBL_FILTERS_TITLE}</h3>\r\n        <Button isIcon _class=\"filters__toggle\" onClick={toggleFilterSection}>\r\n          <i className={`fa fa-${expandOrCollapse ? \"minus\" : \"plus\"}`}></i>\r\n        </Button>\r\n      </div>\r\n      <div className={`filters__section ${expandOrCollapse ? \"expanded\" : \"\"}`}>\r\n        {filterCategories.map((filterCategory) => {\r\n          return (\r\n            <FilterCategory\r\n              key={filterCategory.type}\r\n              {...filterCategory}\r\n              applyFilters={applyFilters}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Filters;\r\n","import React from \"react\";\r\nimport Filters from \"../Filters\";\r\n\r\nconst Sidebar = () => {\r\n  return (\r\n    <div className=\"side-bar\">\r\n      <div className=\"side-bar__content\">\r\n        <Filters />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import React from \"react\";\r\nimport { string, func } from \"prop-types\";\r\n\r\nconst Chip = ({ label = \"\", onClose = undefined }) => {\r\n  return (\r\n    <div className=\"chip\">\r\n      <span className=\"chip__label\">{label}</span>\r\n      {onClose && (\r\n        <button\r\n          type=\"button\"\r\n          className=\"chip__closebtn\"\r\n          onClick={onClose}\r\n          aria-label=\"close chip\"\r\n        ></button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nChip.propTypes = {\r\n  label: string,\r\n  onClose: func || undefined,\r\n};\r\n\r\nexport default Chip;\r\n","import React, { useContext } from \"react\";\r\nimport Chip from \"../../core-components/Chip\";\r\nimport { store } from \"../../config/store\";\r\nimport { LBL_SELECTED_FILTERS_TITLE } from \"../../utility/constants\";\r\n\r\nconst SelectedFilters = () => {\r\n  const state = useContext(store).state;\r\n  const { selectedFilters } = state;\r\n\r\n  return selectedFilters && selectedFilters.size > 0 ? (\r\n    <>\r\n      <div className=\"selected-filters\">\r\n        <h3 className=\"selected-filters__title\">\r\n          {LBL_SELECTED_FILTERS_TITLE}\r\n        </h3>\r\n        <div className=\"selected-filters__chips-section\">\r\n          {Array.from(selectedFilters).map((selFilter) => {\r\n            return <Chip key={selFilter} label={selFilter} />;\r\n          })}\r\n        </div>\r\n      </div>\r\n    </>\r\n  ) : null;\r\n};\r\n\r\nexport default SelectedFilters;\r\n","import React from \"react\";\r\nimport { string, func, arrayOf, object } from \"prop-types\";\r\n\r\nconst Select = ({\r\n  id = \"\",\r\n  ariaLabel = \"\",\r\n  testId = \"\",\r\n  defaultValue = \"\",\r\n  onChange = undefined,\r\n  optionsData = [],\r\n  _class = \"\",\r\n}) => {\r\n  return (\r\n    <select\r\n      id={id}\r\n      aria-label={ariaLabel}\r\n      data-test-id={testId}\r\n      defaultValue={defaultValue}\r\n      onChange={onChange}\r\n      className={`select ${_class}`}\r\n    >\r\n      {optionsData &&\r\n        optionsData.map((option) => {\r\n          return (\r\n            <option key={option.value} value={option.value}>\r\n              {option.name}\r\n            </option>\r\n          );\r\n        })}\r\n    </select>\r\n  );\r\n};\r\n\r\nSelect.propTypes = {\r\n  id: string,\r\n  ariaLabel: string,\r\n  testId: string,\r\n  defaultValue: string,\r\n  onChange: func || undefined,\r\n  optionsData: arrayOf(object),\r\n  _class: string,\r\n};\r\n\r\nexport default Select;\r\n","import React, { useState } from \"react\";\r\nimport { string, func } from \"prop-types\";\r\nimport Button from \"../Button\";\r\n\r\nconst SearchBar = ({\r\n  inputLabel = \"\",\r\n  btnLabel = \"\",\r\n  handleSearch = undefined,\r\n}) => {\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n\r\n  const handleSearchTerm = (e) => {\r\n    setSearchTerm(e.target.value);\r\n  };\r\n\r\n  const handleSearchSubmit = (e) => {\r\n    handleSearch(searchTerm.trim());\r\n    e.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <div className=\"search-bar\">\r\n      <form onSubmit={handleSearchSubmit}>\r\n        <label htmlFor=\"search-term\" className=\"search-bar__title\">\r\n          {inputLabel}\r\n        </label>\r\n        <div className=\"search-bar__input-section\">\r\n          <input\r\n            id=\"search-term\"\r\n            type=\"text\"\r\n            className=\"search-bar__input\"\r\n            onChange={handleSearchTerm}\r\n          />\r\n          <Button type=\"submit\" onClick={handleSearchSubmit}>\r\n            {btnLabel}\r\n          </Button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nSearchBar.propTypes = {\r\n  inputLabel: string,\r\n  btnLabel: string,\r\n  handleSearch: func || undefined,\r\n};\r\n\r\nexport default SearchBar;\r\n","import React, { useContext, useState } from \"react\";\r\nimport Button from \"../../core-components/Button\";\r\nimport Select from \"../../core-components/Select\";\r\nimport SearchBar from \"../../core-components/SearchBar\";\r\nimport { store } from \"../../config/store\";\r\nimport {\r\n  ACT_SEARCH_CHAR,\r\n  ACT_SORT_DATA,\r\n  LBL_SEARCH,\r\n  LBL_SEARCH_CTA,\r\n} from \"../../utility/constants\";\r\n\r\nconst SearchAndSort = () => {\r\n  const { state, dispatch } = useContext(store);\r\n  const [sortParam, setSortParam] = useState(\"id\");\r\n  const { sortOptions } = state;\r\n\r\n  const searchCharacter = (searchTerm) => {\r\n    dispatch({ type: ACT_SEARCH_CHAR, payload: searchTerm });\r\n  };\r\n\r\n  const handleSort = (sortOrder) => {\r\n    dispatch({\r\n      type: ACT_SORT_DATA,\r\n      payload: {\r\n        sortParam,\r\n        sortOrder,\r\n      },\r\n    });\r\n  };\r\n\r\n  const handleSortParam = (e) => {\r\n    setSortParam(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"search-sort\">\r\n      <SearchBar\r\n        inputLabel={LBL_SEARCH}\r\n        btnLabel={LBL_SEARCH_CTA}\r\n        handleSearch={searchCharacter}\r\n      />\r\n      <div className=\"search-sort__sort-section\">\r\n        <Select\r\n          _class=\"search-sort__sort\"\r\n          optionsData={sortOptions}\r\n          defaultValue=\"id\"\r\n          onChange={handleSortParam}\r\n        />\r\n        <div className=\"search-sort__cta-section\">\r\n          <Button isIcon onClick={() => handleSort(\"asc\")}>\r\n            <i className=\"fa fa-chevron-up\"></i>\r\n          </Button>\r\n          <Button isIcon onClick={() => handleSort(\"desc\")}>\r\n            <i className=\"fa fa-chevron-down\"></i>\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchAndSort;\r\n","const timeDifference = (current, previous) => {\r\n  const msPerMinute = 60 * 1000;\r\n  const msPerHour = msPerMinute * 60;\r\n  const msPerDay = msPerHour * 24;\r\n  const msPerMonth = msPerDay * 30;\r\n  const msPerYear = msPerDay * 365;\r\n\r\n  const elapsed = current - previous;\r\n\r\n  if (elapsed < msPerMinute) {\r\n    return Math.floor(elapsed / 1000) + \" seconds ago\";\r\n  } else if (elapsed < msPerHour) {\r\n    return Math.floor(elapsed / msPerMinute) + \" minutes ago\";\r\n  } else if (elapsed < msPerDay) {\r\n    return Math.floor(elapsed / msPerHour) + \" hours ago\";\r\n  } else if (elapsed < msPerMonth) {\r\n    return Math.floor(elapsed / msPerDay) + \" days ago\";\r\n  } else if (elapsed < msPerYear) {\r\n    return Math.floor(elapsed / msPerMonth) + \" months ago\";\r\n  } else {\r\n    return Math.floor(elapsed / msPerYear) + \" years ago\";\r\n  }\r\n};\r\n\r\nconst getTimestamp = (inputDate) => {\r\n  const currentDate = new Date();\r\n  const createdDate = new Date(inputDate);\r\n\r\n  return timeDifference(currentDate.getTime(), createdDate.getTime());\r\n};\r\n\r\nexport { getTimestamp };\r\n","import React from \"react\";\r\nimport { objectOf, string, number, oneOfType, object, array } from \"prop-types\";\r\nimport { getTimestamp } from \"../../utility/getRelativeTimestamp\";\r\nimport {\r\n  LBL_CREATED,\r\n  LBL_STATUS,\r\n  LBL_SPECIES,\r\n  LBL_GENDER,\r\n  LBL_ORIGIN,\r\n  LBL_LAST_LOCATION,\r\n} from \"../../utility/constants\";\r\n\r\nconst CharacterCard = ({ character = {} }) => {\r\n  const {\r\n    name = \"\",\r\n    id = \"\",\r\n    status = \"\",\r\n    species = \"\",\r\n    gender = \"\",\r\n    origin = {},\r\n    location = {},\r\n    image = \"\",\r\n    created = \"\",\r\n  } = character;\r\n\r\n  return (\r\n    <div className=\"character-card\">\r\n      <div className=\"character-card__image-section\">\r\n        <img src={image} alt={name} className=\"character-card__image\" />\r\n        <div className=\"character-card__title-wrapper\">\r\n          <div className=\"character-card__title-section\">\r\n            <h4 className=\"character-card__title\">{name}</h4>\r\n            <span className=\"character-card__details\">\r\n              {`id: ${id} - ${LBL_CREATED} ${getTimestamp(created)}`}\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"character-card__content-section\">\r\n        <div className=\"character-card__desc-item\">\r\n          <span className=\"character-card__desc-type\">{LBL_STATUS}</span>\r\n          <span className=\"character-card__desc-data\">{status}</span>\r\n        </div>\r\n        <div className=\"character-card__desc-item\">\r\n          <span className=\"character-card__desc-type\">{LBL_SPECIES}</span>\r\n          <span className=\"character-card__desc-data\">{species}</span>\r\n        </div>\r\n        <div className=\"character-card__desc-item\">\r\n          <span className=\"character-card__desc-type\">{LBL_GENDER}</span>\r\n          <span className=\"character-card__desc-data\">{gender}</span>\r\n        </div>\r\n        <div className=\"character-card__desc-item\">\r\n          <span className=\"character-card__desc-type\">{LBL_ORIGIN}</span>\r\n          <span className=\"character-card__desc-data\">{origin.name}</span>\r\n        </div>\r\n        <div className=\"character-card__desc-item\">\r\n          <span className=\"character-card__desc-type\">{LBL_LAST_LOCATION}</span>\r\n          <span className=\"character-card__desc-data\">{location.name}</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nCharacterCard.propTypes = {\r\n  labels: objectOf(string),\r\n  character: objectOf(oneOfType([string, number, object, array])),\r\n};\r\n\r\nexport default CharacterCard;\r\n","import React, { useContext } from \"react\";\r\nimport CharacterCard from \"../../core-components/CharacterCard\";\r\nimport { store } from \"../../config/store\";\r\n\r\nconst ResultsSection = () => {\r\n  const state = useContext(store).state;\r\n  const { data } = state;\r\n\r\n  return (\r\n    <div className=\"results-section\">\r\n      {data &&\r\n        data.results.map((character) => {\r\n          return (\r\n            <CharacterCard\r\n              key={`${character.id}_${character.name}`}\r\n              character={character}\r\n            />\r\n          );\r\n        })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResultsSection;\r\n","import React from \"react\";\r\nimport { string } from \"prop-types\";\r\n\r\nconst NoResults = ({ message = \"\" }) => {\r\n  return (\r\n    <div className=\"no-results\">\r\n      <p className=\"no-results__message\">{message}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nNoResults.propTypes = {\r\n  message: string,\r\n};\r\n\r\nexport default NoResults;\r\n","import React, { useContext } from \"react\";\r\nimport { func } from \"prop-types\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport SelectedFilters from \"../SelectedFilters\";\r\nimport SearchAndSort from \"../SearchAndSort\";\r\nimport ResultsSection from \"../ResultsSection\";\r\nimport NoResults from \"../../core-components/NoResults\";\r\nimport { store } from \"../../config/store\";\r\nimport {\r\n  URL_PARAM,\r\n  LBL_PREV,\r\n  LBL_NEXT,\r\n  LBL_PAGINATION_BREAK,\r\n  MSG_NO_RESULTS_FOUND,\r\n} from \"../../utility/constants\";\r\n\r\nconst ContentSection = ({ fetchData }) => {\r\n  const state = useContext(store).state;\r\n  const { data } = state;\r\n\r\n  const handlePageChange = (e) => {\r\n    let pageUrl = `${URL_PARAM}${e.selected + 1}`;\r\n    fetchData(pageUrl);\r\n  };\r\n\r\n  return (\r\n    <div className=\"content-section\">\r\n      <SelectedFilters />\r\n      <SearchAndSort />\r\n      {data && data.results && data.results.length > 0 ? (\r\n        <>\r\n          <ResultsSection />\r\n          <ReactPaginate\r\n            previousLabel={LBL_PREV}\r\n            nextLabel={LBL_NEXT}\r\n            breakLabel={LBL_PAGINATION_BREAK}\r\n            breakClassName={\"break-me\"}\r\n            pageCount={data.info.pages || 0}\r\n            marginPagesDisplayed={2}\r\n            pageRangeDisplayed={5}\r\n            onPageChange={handlePageChange}\r\n            containerClassName={\"pagination\"}\r\n            subContainerClassName={\"pages pagination\"}\r\n            activeClassName={\"active\"}\r\n          />\r\n        </>\r\n      ) : (\r\n        <NoResults message={MSG_NO_RESULTS_FOUND} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nContentSection.propTypes = { fetchData: func };\r\n\r\nexport default ContentSection;\r\n","/* Creates and returns an instance of axios */\r\n\r\nimport axios from \"axios\";\r\n\r\nconst BASE_URL = \"https://rickandmortyapi.com/api/character/\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: BASE_URL,\r\n  timeout: 5000,\r\n  headers: {\r\n    \"access-control-allow-origin\": \"*\",\r\n    \"content-type\": \"application/json;charset=UTF-8\",\r\n  },\r\n});\r\n\r\nexport const CancelToken = axios.CancelToken;\r\n\r\nexport const cancelTokenSource = CancelToken.source();\r\n\r\nexport const isCancel = axios.isCancel;\r\n\r\nexport default instance;\r\n","import axios from \"../config/axiosInstance\";\r\n\r\nconst apiService = async ({ url, data = { params: {} } }) => {\r\n  let response = null;\r\n  let error = null;\r\n  const params = data.params || {};\r\n\r\n  const customHeader = {\r\n    headers: {},\r\n  };\r\n\r\n  try {\r\n    if (data.requestType === \"GET\") {\r\n      const resp = await axios.get(\r\n        url,\r\n        {\r\n          params: params,\r\n        },\r\n        customHeader\r\n      );\r\n\r\n      response = { data: resp.data };\r\n    } else if (data.requestType === \"POST\" && params) {\r\n      const resp = await axios.post(url, params, customHeader);\r\n\r\n      response = { data: resp.data };\r\n    }\r\n  } catch (errorDetails) {\r\n    error = { data: errorDetails.response };\r\n  }\r\n\r\n  return { response, error };\r\n};\r\n\r\nexport { apiService };\r\n","import React from \"react\";\r\n\r\nconst Spinner = () => {\r\n  return <div className=\"spinner\"></div>;\r\n};\r\n\r\nexport default Spinner;\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport Sidebar from \"../Sidebar\";\r\nimport ContentSection from \"../ContentSection\";\r\nimport { store } from \"../../config/store\";\r\nimport { apiService } from \"../../utility/apiService\";\r\nimport Spinner from \"../../core-components/Spinner\";\r\nimport { ACT_FETCH_DATA, ACT_CLEAR_DATA } from \"../../utility/constants\";\r\n\r\nconst Main = () => {\r\n  const context = useContext(store);\r\n  const { state, dispatch } = context;\r\n\r\n  const fetchData = (page = \"\") => {\r\n    const promise = apiService({ url: page, data: { requestType: \"GET\" } });\r\n    promise.then((details) => {\r\n      const { response, error } = details;\r\n\r\n      if (response) {\r\n        const responsePayload = response.data;\r\n        dispatch({ type: ACT_FETCH_DATA, payload: responsePayload });\r\n      }\r\n\r\n      if (error) {\r\n        const errorPayload = error.data;\r\n\r\n        if (errorPayload) {\r\n          dispatch({ type: ACT_CLEAR_DATA });\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"main\">\r\n      {state.data && Object.keys(state.data).length > 0 ? (\r\n        <>\r\n          <Sidebar />\r\n          <ContentSection fetchData={fetchData} />\r\n        </>\r\n      ) : (\r\n        <Spinner />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import React from \"react\";\r\nimport { string } from \"prop-types\";\r\nimport { APP_NAME, GIT_LINK, GIT_NAME } from \"../../utility/constants\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div className=\"footer\">\r\n      <div className=\"footer__content-section\">\r\n        <span className=\"footer__appName\">&copy; {APP_NAME}, </span>\r\n        <span>\r\n          <i className=\"fa fa-github\"></i>\r\n          {\" \"}\r\n          <a\r\n            className=\"footer__git-link\"\r\n            href={GIT_LINK}\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            {GIT_NAME}\r\n          </a>\r\n        </span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nFooter.propTypes = {\r\n  appName: string,\r\n  gitLink: string,\r\n  gitName: string,\r\n};\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport \"./styles/App.scss\";\r\nimport Header from \"./components/Header\";\r\nimport Main from \"./components/Main\";\r\nimport Footer from \"./components/Footer\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className=\"App\">\r\n      <Header />\r\n      <Main />\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { StateProvider } from \"./config/store\";\n\nReactDOM.render(\n  <StateProvider>\n    <App />\n  </StateProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}